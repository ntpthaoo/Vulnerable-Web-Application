version: 0.2
env:
  secrets-manager:
    # Get SonarCloud credential from AWS Secret Manager: https://us-east-1.console.aws.amazon.com/secretsmanager/secret?name=demo-datn-codebuild&region=us-east-1
    LOGIN: demo-datn-codebuild:sonartoken
    # SonarCloud need this env var
    SONAR_TOKEN: demo-datn-codebuild:sonartoken
    HOST: demo-datn-codebuild:HOST
    Organization: demo-datn-codebuild:Organization
    Project: demo-datn-codebuild:Project
phases:
  pre_build:
    commands:
      - echo "1. pre build step"
      - apt-get update
      - apt-get install -y jq
      - echo "Install Sonar scanner binary."
      - export SONAR_SCANNER_VERSION=4.7.0.2747
      - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
      - curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
      - unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
      - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
      - export SONAR_SCANNER_OPTS="-server"
  build:
    commands:
      - PR_NUMBER=$(aws codepipeline get-pipeline-state --name test-security --query 'stageStates[?stageName==`Source`].actionStates[?actionName==`SourceAction`].latestExecution.externalExecutionId' --output text | awk -F'/' '{print $4}')
      - echo "2. Build step"
      - echo "Run SonarCloud scanner"
      - sonar-scanner -Dsonar.organization=ntpthaoo -Dsonar.projectKey=ntpthaoo_Vulnerable-Web-Application -Dsonar.sources=. Dsonar.pullrequest.key=$PR_NUMBER -Dsonar.host.url=https://sonarcloud.io
      - sleep 5
      - echo "Get SonarClound scanning result and output it to build log."
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=ntpthaoo_Vulnerable-Web-Application >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
  post_build:
    commands:
      - echo 3. "Post build"

artifacts:
  files:
    - codedeploy/**/*
    - appspec.yml
    - docker-compose.yml
    - .env
